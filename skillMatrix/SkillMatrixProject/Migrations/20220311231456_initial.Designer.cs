// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using skillMatrix.WebAPI.Data.DataContext;

#nullable disable

namespace SkillMatrixProject.Migrations
{
    [DbContext(typeof(SkillMatrixDbContext))]
    [Migration("20220311231456_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SkillMatrixProject.Models.ContractStatus", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ContractStatuses");
                });

            modelBuilder.Entity("SkillMatrixProject.Models.Department", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("SkillMatrixProject.Models.Employee", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ContractStatusId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DepartmentId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmploymentStatusId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EndTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDisabled")
                        .HasColumnType("bit");

                    b.Property<string>("JobtitleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StartTime")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ContractStatusId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("EmploymentStatusId");

                    b.HasIndex("JobtitleId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("SkillMatrixProject.Models.Employee_Skill", b =>
                {
                    b.Property<string>("EmployeeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SkillId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SkillLevelId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("EmployeeId", "SkillId");

                    b.HasIndex("SkillId");

                    b.HasIndex("SkillLevelId");

                    b.ToTable("Employee_Skills");
                });

            modelBuilder.Entity("SkillMatrixProject.Models.EmploymentStatus", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EmploymentStatuses");
                });

            modelBuilder.Entity("SkillMatrixProject.Models.Jobtitle", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("JobTitles");
                });

            modelBuilder.Entity("SkillMatrixProject.Models.Skill", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SkillCategoryId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("SkillCategoryId");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("SkillMatrixProject.Models.SkillCategory", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SkillCategories");
                });

            modelBuilder.Entity("SkillMatrixProject.Models.SkillLevel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SkillLevels");
                });

            modelBuilder.Entity("SkillMatrixProject.Models.Employee", b =>
                {
                    b.HasOne("SkillMatrixProject.Models.ContractStatus", "ContractStatus")
                        .WithMany("Employees")
                        .HasForeignKey("ContractStatusId");

                    b.HasOne("SkillMatrixProject.Models.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SkillMatrixProject.Models.EmploymentStatus", "EmploymentStatus")
                        .WithMany("Employees")
                        .HasForeignKey("EmploymentStatusId");

                    b.HasOne("SkillMatrixProject.Models.Jobtitle", "Jobtitle")
                        .WithMany("Employees")
                        .HasForeignKey("JobtitleId");

                    b.Navigation("ContractStatus");

                    b.Navigation("Department");

                    b.Navigation("EmploymentStatus");

                    b.Navigation("Jobtitle");
                });

            modelBuilder.Entity("SkillMatrixProject.Models.Employee_Skill", b =>
                {
                    b.HasOne("SkillMatrixProject.Models.Employee", "Employee")
                        .WithMany("Employee_Skills")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SkillMatrixProject.Models.Skill", "Skill")
                        .WithMany("Employee_Skills")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SkillMatrixProject.Models.SkillLevel", "SkillLevel")
                        .WithMany()
                        .HasForeignKey("SkillLevelId");

                    b.Navigation("Employee");

                    b.Navigation("Skill");

                    b.Navigation("SkillLevel");
                });

            modelBuilder.Entity("SkillMatrixProject.Models.Skill", b =>
                {
                    b.HasOne("SkillMatrixProject.Models.SkillCategory", "SkillCategory")
                        .WithMany("Skills")
                        .HasForeignKey("SkillCategoryId");

                    b.Navigation("SkillCategory");
                });

            modelBuilder.Entity("SkillMatrixProject.Models.ContractStatus", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("SkillMatrixProject.Models.Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("SkillMatrixProject.Models.Employee", b =>
                {
                    b.Navigation("Employee_Skills");
                });

            modelBuilder.Entity("SkillMatrixProject.Models.EmploymentStatus", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("SkillMatrixProject.Models.Jobtitle", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("SkillMatrixProject.Models.Skill", b =>
                {
                    b.Navigation("Employee_Skills");
                });

            modelBuilder.Entity("SkillMatrixProject.Models.SkillCategory", b =>
                {
                    b.Navigation("Skills");
                });
#pragma warning restore 612, 618
        }
    }
}
